public class Main {

    public static void main(String[] args) {

Phone phone = new Phone("Jirkas");
phone.runPhone();
    }
}


import java.util.HashMap;
import java.util.Map;
import java.util.Objects;


class Contact {

    private String name;
    private String phoneNumber;
    private Map<String, String> contacts = new HashMap<>();

    public Contact() {
    }

    public String getName() {
        return name;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public boolean addContact(String name, String phoneNumber) {
        if(contacts.containsKey(name)) {
            System.out.println("Contact already exists. Contact not added! Create contact with different name.");
            return false;
        } else {
            contacts.put(name, phoneNumber);
            System.out.println("Contact " + name + " " + phoneNumber + " has been added.");
            return true;
        }
    }
    public boolean removeContact(String name) {
        if(contacts.containsKey(name.toLowerCase())) {
            contacts.remove(name);
            System.out.println("Contact " + name + " has been removed.");
            return true;
        } else {
            System.out.println("Couldn't find the contact " + name + " no contact was removed.");
            return false;
        }
    }
    public boolean replaceContact(String name, String phoneNumber) {
        if(contacts.containsKey(name.toLowerCase())) {
            contacts.replace(name.toLowerCase(), phoneNumber);
            System.out.println("Number of contact " + name + " has been replaced.");
            return true;
        } else {
            System.out.println("Couldn't find contact " + name);
            return false;
        }
    }
    public void displayContacts() {
        System.out.println(contacts.entrySet());
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Contact contact = (Contact) o;
        return Objects.equals(name, contact.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name);
    }
}

import java.util.Scanner;


class Phone {

    Scanner scanner = new Scanner(System.in);
    private String phoneName;
    private Contact contatcs = new Contact();

    public Phone(String phoneName) {
        this.phoneName = phoneName;
    }

    public void runPhone() {
        boolean off = false;
        int choice = 0;
        System.out.println("Turning on the phone. Please select action below: ");
        displayChoices();

        while(!off) {

            System.out.println("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    displayChoices();
                    break;
                case 2:
                    addContact();
                    break;
                case 3:
                    removeContact();
                    break;
                case 4:
                    replaceContact();
                    break;
                case 5:
                    displayContact();
                    break;
                case 6:
                    System.out.println("shutting down...");
                    off = true;
                    break;
            }
        }
    }

    public void displayChoices() {
        System.out.println("\t Enter: \n " +
                "1 - to display choices \n" +
                "2 - to add contact \n" +
                "3 - to remove contact \n" +
                "4 - to replace contact \n" +
                "5 - to display contacts \n" +
                "6 - to turn off phone");
    }
    public void addContact() {
        String name;
        String phoneNumber;
        System.out.println("Enter contact name: ");
        name = scanner.nextLine().toLowerCase();
        System.out.println("Enter " + name + "'s phone number: ");
        phoneNumber = scanner.nextLine();
        contatcs.addContact(name, phoneNumber);
    }
    public void removeContact() {
        String name;
        System.out.println("Enter name of contact you want to remove: ");
        name = scanner.nextLine().toLowerCase();
        contatcs.removeContact(name);
    }
    public void replaceContact() {
        String name;
        String phoneNumber;
        System.out.println("Enter name of contact you want to replace: ");
        name = scanner.nextLine().toLowerCase();
        System.out.println("Enter phone number of contact " + name + " : ");
        phoneNumber = scanner.nextLine();
        contatcs.replaceContact(name, phoneNumber);
    }
    public void displayContact() {
        contatcs.displayContacts();
    }
}
